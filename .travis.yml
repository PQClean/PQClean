language: c

dist: xenial

matrix:
  include:
    - name: "Linux + GCC + Linting + Metadata"
      os: linux
      compiler: gcc
      env:
        - MAKETARGET="test-all tidy-all check-format check-metadata check-license-files"
      addons:
        apt:
          packages:
            - python3
            - python3-colorama
            - python3-yaml
            - valgrind
    - name: "Linux + Clang"
      os: linux
      compiler: clang
      env:
        - MAKETARGET=test-all
      addons:
        apt:
          packages:
            - python3
            - python3-yaml
            - python3-colorama
            - valgrind
    - name: "Linux 32-bit GCC"
      os: linux
      compiler: gcc  # Clang has i386-libasan problems on xenial
      addons:
        apt:
          packages:
            - gcc-multilib
            - python3
            - python3-colorama
            - python3-yaml
            - valgrind
      before_install:
        - sudo dpkg --add-architecture i386
        - sudo apt update -qq && sudo apt-get install -qqy libc6-dbg:i386
      env:
        - MAKETARGET=test-all
        - EXTRAFLAGS=-m32
    - name: "Run tests on qemu-ppc (GCC)"
      os: linux
      services: docker
      env:
        - MAKETARGET="run-functest-all run-testvectors-all run-sanitizer-all run-symbol-namespace-all"
      script:
        - docker run --rm --privileged multiarch/qemu-user-static:register --reset
        - docker run --rm -v `pwd`:`pwd` -w `pwd` "pqclean/debian-unstable-ppc" /bin/bash -c "uname -a &&
          make ${MAKETARGET}"
    - name: "MacOS + Clang"
      os: osx
      osx_image: xcode10.1
      compiler: clang
      before_install:
        - pip3 install -r requirements.txt
      env:
        - MAKETARGET=test-all
    - name: "MacOS + GCC8"
      os: osx
      osx_image: xcode10.1
      compiler: gcc
      addons:
        homebrew:
          packages:
            - gcc@8
      before_install:
        - pip3 install -r requirements.txt
      env:
        - MAKETARGET=test-all

script:
  - make ${MAKETARGET}
  - cd scripts && ./run_checks.py

cache: pip

#  vim: set ft=yaml ts=2 sw=2 tw=0 et :
