version: 2.1

.emulated_job: &defaultjob
  machine: true
  steps:
    - checkout
    - run: &checkouttask
        name: Pull submodules
        command: |
          git submodule init
          git submodule update
          git checkout $CIRCLECI_BRANCH
          git reset --hard $CIRCLECI_SHA1
    - run:
        name: Install the emulation handlers
        command: docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - run:
        name: Run the tests in a container
        command: |
          docker run -e CI=true -e PQCLEAN_ONLY_DIFF=1 --rm -v `pwd`:`pwd` -w `pwd` "pqclean/ci-container:$ARCH" /bin/bash -c "
          uname -a &&
          export CC=${CC} &&
          pip3 install -r requirements.txt &&
          mkdir test-results &&
          cd test && python3 -m nose --rednose --verbose --with-xunit --xunit-file=../test-results/nosetests.xml"
    - store_test_results:
        path: test-results

.native_job: &nativejob
  docker:
    - image: pqclean/ci-container:$ARCH
  steps:
    - checkout
    - run:
        <<: *checkouttask
    - run:
        name: Run tests
        command: |
          export CC=${CC}
          export PQCLEAN_ONLY_DIFF=1
          pip3 install -r requirements.txt
          mkdir test-results
          cd test
          python3 -m nose --rednose --verbose --with-xunit --xunit-file=../test-results/nosetests.xml
    - store_test_results:
        path: test-results

jobs:
  arm64-gcc:
    <<: *defaultjob
    environment:
      CC: gcc
      ARCH: arm64
  arm64-clang:
    <<: *defaultjob
    environment:
      CC: clang
      ARCH: arm64
  arm32-gcc:
    <<: *defaultjob
    environment:
      CC: gcc
      ARCH: armhf
  arm32-clang:
    <<: *defaultjob
    environment:
      CC: clang
      ARCH: armhf
  ppc-clang:
    <<: *defaultjob
    environment:
      CC: clang
      ARCH: unstable-ppc
  ppc-gcc:
    <<: *defaultjob
    environment:
      CC: gcc
      ARCH: unstable-ppc
  amd64-gcc:
    <<: *nativejob
    environment:
      CC: gcc
      ARCH: amd64
  amd64-clang:
    <<: *nativejob
    environment:
      CC: gcc
      ARCH: amd64
  i386-gcc:
    <<: *nativejob
    environment:
      CC: gcc
      ARCH: i386
  i386-clang:
    <<: *nativejob
    environment:
      CC: gcc
      ARCH: i386
  # These are for the scheduled builds
  arm64-gcc-slow:
    <<: *defaultjob
    environment:
      CC: gcc
      ARCH: arm64
      RUN_SLOW: 1
  arm64-clang-slow:
    <<: *defaultjob
    environment:
      CC: clang
      ARCH: arm64
      RUN_SLOW: 1
  arm32-gcc-slow:
    <<: *defaultjob
    environment:
      CC: gcc
      ARCH: armhf
      RUN_SLOW: 1
  arm32-clang-slow:
    <<: *defaultjob
    environment:
      CC: clang
      ARCH: armhf
      RUN_SLOW: 1
  ppc-clang-slow:
    <<: *defaultjob
    environment:
      CC: clang
      ARCH: unstable-ppc
      RUN_SLOW: 1
  ppc-gcc-slow:
    <<: *defaultjob
    environment:
      CC: gcc
      ARCH: unstable-ppc
      RUN_SLOW: 1
  amd64-gcc-slow:
    <<: *nativejob
    environment:
      CC: gcc
      ARCH: amd64
      RUN_SLOW: 1
  amd64-clang-slow:
    <<: *nativejob
    environment:
      CC: gcc
      ARCH: amd64
      RUN_SLOW: 1
  i386-gcc-slow:
    <<: *nativejob
    environment:
      CC: gcc
      ARCH: i386
      RUN_SLOW: 1
  i386-clang-slow:
    <<: *nativejob
    environment:
      CC: gcc
      ARCH: i386
      RUN_SLOW: 1


workflows:
  version: 2
  build:
    jobs:
      - arm64-gcc:
          requires:
            - amd64-gcc
      - arm64-clang:
          requires:
            - amd64-clang
      - arm32-gcc:
          requires:
            - i386-gcc
      - arm32-clang:
          requires:
            - i386-clang
      - ppc-gcc:
          requires:
            - arm32-gcc
      - ppc-clang:
          requires:
            - arm32-clang
      - amd64-gcc
      - amd64-clang
      - i386-gcc
      - i386-clang
  scheduled:
    triggers:
      - schedule:
          cron: "0 5 * * *"
          filters:
            branches:
              only: master
    jobs:
      - arm64-gcc-slow
      - arm64-gcc-slow
      - arm64-clang-slow
      - arm32-gcc-slow
      - arm32-clang-slow
      - ppc-gcc-slow
      - ppc-clang-slow
      - amd64-gcc-slow
      - amd64-clang-slow
      - i386-gcc-slow
      - i386-clang-slow

#  vim: set ft=yaml ts=2 sw=2 tw=0 et :

#  vim: set ft=yaml ts=2 sw=2 tw=0 et :
